{"version":3,"sources":["/./src/app/pages/login/login.html","/./src/app/pages/login/login-routing.module.ts","/./src/app/pages/login/login.module.ts","/./src/app/pages/login/login.scss","/./src/app/pages/login/login.ts","/./src/app/providers/api-services.service.ts"],"names":[],"mappings":"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","file":"pages-login-login-module-es2015.js","sourcesContent":["module.exports = \"<!-- <ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n\\n    <ion-title>Login</ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n\\n<ion-content>\\n  <div class=\\\"login-logo\\\">\\n    <img src=\\\"assets/img/appicon.svg\\\" alt=\\\"Ionic logo\\\">\\n  </div>\\n\\n  <form #loginForm=\\\"ngForm\\\" novalidate>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Username</ion-label>\\n        <ion-input [(ngModel)]=\\\"login.username\\\" name=\\\"username\\\" type=\\\"text\\\" #username=\\\"ngModel\\\" spellcheck=\\\"false\\\" autocapitalize=\\\"off\\\"\\n          required>\\n        </ion-input>\\n      </ion-item>\\n\\n      <ion-text color=\\\"danger\\\">\\n        <p [hidden]=\\\"username.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n          Username is required\\n        </p>\\n      </ion-text>\\n\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Password</ion-label>\\n        <ion-input [(ngModel)]=\\\"login.password\\\" name=\\\"password\\\" type=\\\"password\\\" #password=\\\"ngModel\\\" required>\\n        </ion-input>\\n      </ion-item>\\n\\n      <ion-text color=\\\"danger\\\">\\n        <p [hidden]=\\\"password.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n          Password is required\\n        </p>\\n      </ion-text>\\n    </ion-list>\\n\\n    <ion-row>\\n      <ion-col>\\n        <ion-button (click)=\\\"onLogin(loginForm)\\\" type=\\\"submit\\\" expand=\\\"block\\\">Login</ion-button>\\n      </ion-col>\\n      <ion-col>\\n        <ion-button (click)=\\\"onSignup()\\\" color=\\\"light\\\" expand=\\\"block\\\">Signup</ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </form>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginPage } from './login';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login';\nimport { LoginPageRoutingModule } from './login-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [\n    LoginPage,\n  ]\n})\nexport class LoginModule { }\n","module.exports = \".login-logo {\\n  padding: 20px 0;\\n  min-height: 200px;\\n  text-align: center;\\n}\\n\\n.login-logo img {\\n  max-width: 150px;\\n}\\n\\n.list {\\n  margin-bottom: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9rdW5kYW4vU3BfUmVwb19QYXJlbnQvc3BfcGFyZW50X2FwcC9zcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQ0NGOztBREVBO0VBQ0UsZ0JBQUE7QUNDRjs7QURFQTtFQUNFLGdCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9sb2dpbi9sb2dpbi5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWxvZ28ge1xuICBwYWRkaW5nOiAyMHB4IDA7XG4gIG1pbi1oZWlnaHQ6IDIwMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5sb2dpbi1sb2dvIGltZyB7XG4gIG1heC13aWR0aDogMTUwcHg7XG59XG5cbi5saXN0IHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbiIsIi5sb2dpbi1sb2dvIHtcbiAgcGFkZGluZzogMjBweCAwO1xuICBtaW4taGVpZ2h0OiAyMDBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4ubG9naW4tbG9nbyBpbWcge1xuICBtYXgtd2lkdGg6IDE1MHB4O1xufVxuXG4ubGlzdCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59Il19 */\"","import { Component, ViewEncapsulation } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { UserData } from '../../providers/user-data';\n\nimport { UserOptions } from '../../interfaces/user-options';\nimport { ApiServicesService } from '../../providers/api-services.service';\n\n\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n  styleUrls: ['./login.scss'],\n})\nexport class LoginPage {\n  login: UserOptions = { username: '', password: '' };\n  submitted = false;\n  isAuthenticate: boolean = false; \n\n  constructor(\n    public userData: UserData,\n    public router: Router,\n    public api: ApiServicesService\n  ) { }\n\n  // onLogin(form: NgForm) {\n  //   this.submitted = true;\n  //   this.router.navigateByUrl('/app/tabs/main');  \n  //   // if (form.valid) {\n  //   //   // this.userData.login(this.login.username);\n  //   //   let params = { \n  //   //     'loginid' : 'kundan@squarepanda.in',\n  //   //     'password' : 'Admin123'\n  //   //    };\n  \n  //   //   // User Authentication\n  //   //   this.api._postAPI('userauth',params).subscribe(async res => {\n  //   //         // User exists\n  //   //         if(res[0].status == \"Sucess\"){\n  //   //           localStorage.setItem('loggedInuser', res[0].Name);\n  //   //           this.isAuthenticate = true;\n  //   //           this.router.navigateByUrl('/app/tabs/main');\n  //   //         }else{\n  //   //           alert(res[0].status);\n  //   //         }\n  //   //    },(err) => {\n  //   //       alert('Error:'+err);\n  //   //   });\n  //   // }\n  // }\n\n  onLogin(form: NgForm) {\n    this.submitted = true;\n\n    if (form.valid) {\n      this.userData.login(this.login.username);\n      this.router.navigateByUrl('/app/tabs/main');\n    }\n  }\n\n  onSignup() {\n    this.router.navigateByUrl('/signup');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Platform } from '@ionic/angular';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiServicesService {\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + localStorage.getItem('token')\n  })\n };\n\n apiUrl = 'http://52.66.203.99:3000/user/';\n paymentApi = 'http://52.83.204.66:5000/api/';\n \n constructor(\n  private http: HttpClient, \n  private plt: Platform\n ) { }\n \n // Calling POST Method's \n   _postAPI(methodname:string, params: any): Observable<any> {\n      return this.http.post<any>(this.apiUrl+methodname,params).pipe(\n        tap(_ => \n          this.log(methodname)),\n          catchError(this.handleError('login', []))\n      );\n    }\n\n    // Calling GET Method's\n    _getAPI(methodname:string): Observable<any> {\n      return this.http.get<any>(this.apiUrl+ methodname + localStorage.getItem('employeeId'),this.httpOptions).pipe(\n        tap(_ => this.log(methodname)),\n        catchError(this.handleError('login', []))\n      );\n    }\n\n  // Error Handling\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a Service message with the MessageService */\n  private log(message: string) {\n    console.log(message);\n  }\n}\n"],"sourceRoot":""}